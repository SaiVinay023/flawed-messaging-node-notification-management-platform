version: '3.8'

services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - notification-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - notification-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/notifications
      - NODE_ENV=development
    depends_on:
      - mongodb
      - redis
    networks:
      - notification-network
    restart: unless-stopped

  processor:
    build:
      context: ./processor
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/notifications
      - REDIS_URI=redis://redis:6379
      - NODE_ENV=development
    depends_on:
      - mongodb
      - redis
    networks:
      - notification-network

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
    - ./dashboard/nginx.conf:/etc/nginx/conf.d/default.conf  # Mount nginx.conf  
    depends_on:
      - api
    networks:
      - notification-network

  mock-api:
    build:
      context: ./mock-api
      dockerfile: Dockerfile
    container_name: mock-api
    restart: unless-stopped
    ports:
      - "1337:1337"
    networks:
      - notification-network

networks:
  notification-network:

volumes:
  mongodb_data:
